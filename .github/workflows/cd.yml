name: CD - Terraform

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - 'infra/terraform/**'
  workflow_dispatch: {}

permissions:
  id-token: write   # <-- REQUIRED for OIDC
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # TEMP: print the token's claims once so we can tighten the trust later
      - name: Inspect OIDC token claims (temp)
        uses: actions/github-script@v7
        with:
          script: |
            const token = await core.getIDToken('sts.amazonaws.com');
            const claims = JSON.parse(Buffer.from(token.split('.')[1], 'base64').toString());
            core.info(`sub=${claims.sub}`);
            core.info(`job_workflow_ref=${claims.job_workflow_ref}`);

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::924917171175:role/GitHubActionsTerraformK8sObs
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=terraform init -input=false

      - name: Terraform Plan (create artifact)
        run: |
          terraform -chdir=terraform plan -input=false -out=tfplan.binary
          terraform -chdir=terraform show -no-color tfplan.binary > tfplan.txt

      - name: Upload plan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: |
            terraform/tfplan.binary
            terraform/tfplan.txt


  apply:
    needs: plan
    runs-on: ubuntu-latest
    environment: dev   # <-- this creates the pending deployment that you must approve
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}   # from the 'dev' environment
          aws-region:     ${{ vars.AWS_REGION }}     # from the 'dev' environment

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform

      - name: Terraform Init
        run: terraform -chdir=terraform init -input=false

      - name: Terraform Apply (from approved plan)
        run: terraform -chdir=terraform apply -input=false -auto-approve tfplan.binary
